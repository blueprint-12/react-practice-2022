//클로저란?
// 중첨 함수가 상위 스코프의 식별자를 참조하고 있고
// 중첩 함수의 외부 함수보다 더 오래 살아있다면
// 해당 중첩함수는 클로저입니다.

//이 클로저(편이상 inner함수라고 하겠음)가 참조하는 식별자를
// e.g.) const x = 10 를 "자유 변수" 라고 부릅니다.
// 클로저 어원에 따른 풀이: (inner함수) 함수 본인이 기억하고 있는 자유변수에 의해 닫혀있다.
// 즉, closed 되어 있다라고 볼 수 있습니다.
//왜 클로저를 쓰나요? 하나의 state가 의도치않게 변경되지 않게
// state를 안전하게 은닉(캡슐화)하고 특정 함수에게만 state변경을 허용하기 위해 사용한다.
// 클로저의 핵심은 "스코프를 이용해서, 변수의 접근 범위를 닫는 것에 있다."

//😎클로저 예시
// 박스
let a;

{
  let x = 10;
  a = function (y) {
    return x + y;
  };
}
let b = a;

console.log(b); // b에는 a 라는 함수가 담겨있고
b(5); // 15  해설:상위 스코프의 x = 10에 접근하여 10 + 5

// 중첩함수
let outFn = function () {
  let x = 10;
  return (a = function (y) {
    return x + y;
  });
};
b = outFn(); // b에는 a라는 함수가 담겨있음
b(5); // 15
